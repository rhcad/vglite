/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package touchvg.jni;

public class touchvgJNI {
  public final static native void delete_GiCanvas(long jarg1);
  public final static native void GiCanvas_setPen(long jarg1, GiCanvas jarg1_, int jarg2, float jarg3, int jarg4, float jarg5);
  public final static native void GiCanvas_setBrush(long jarg1, GiCanvas jarg1_, int jarg2, int jarg3);
  public final static native void GiCanvas_clearRect(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void GiCanvas_drawRect(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, boolean jarg6, boolean jarg7);
  public final static native void GiCanvas_drawLine(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void GiCanvas_drawEllipse(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, boolean jarg6, boolean jarg7);
  public final static native void GiCanvas_beginPath(long jarg1, GiCanvas jarg1_);
  public final static native void GiCanvas_moveTo(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3);
  public final static native void GiCanvas_lineTo(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3);
  public final static native void GiCanvas_bezierTo(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native void GiCanvas_quadTo(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void GiCanvas_closePath(long jarg1, GiCanvas jarg1_);
  public final static native void GiCanvas_drawPath(long jarg1, GiCanvas jarg1_, boolean jarg2, boolean jarg3);
  public final static native void GiCanvas_saveClip(long jarg1, GiCanvas jarg1_);
  public final static native void GiCanvas_restoreClip(long jarg1, GiCanvas jarg1_);
  public final static native boolean GiCanvas_clipRect(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native boolean GiCanvas_clipPath(long jarg1, GiCanvas jarg1_);
  public final static native void GiCanvas_drawHandle(long jarg1, GiCanvas jarg1_, float jarg2, float jarg3, int jarg4);
  public final static native void GiCanvas_drawBitmap(long jarg1, GiCanvas jarg1_, String jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native float GiCanvas_drawTextAt(long jarg1, GiCanvas jarg1_, String jarg2, float jarg3, float jarg4, float jarg5, int jarg6);
  public final static native long new_GiCanvas();
  public final static native void GiCanvas_director_connect(GiCanvas obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void GiCanvas_change_ownership(GiCanvas obj, long cptr, boolean take_or_release);
  public final static native void delete_GiView(long jarg1);
  public final static native void GiView_regenAll(long jarg1, GiView jarg1_);
  public final static native void GiView_regenAppend(long jarg1, GiView jarg1_);
  public final static native void GiView_redraw(long jarg1, GiView jarg1_);
  public final static native boolean GiView_useFinger(long jarg1, GiView jarg1_);
  public final static native boolean GiView_useFingerSwigExplicitGiView(long jarg1, GiView jarg1_);
  public final static native long new_GiView();
  public final static native void GiView_director_connect(GiView obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void GiView_change_ownership(GiView obj, long cptr, boolean take_or_release);
  public final static native long new_GiCoreView(long jarg1, GiCoreView jarg1_);
  public final static native void delete_GiCoreView(long jarg1);
  public final static native void GiCoreView_createView__SWIG_0(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3);
  public final static native void GiCoreView_createView__SWIG_1(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_);
  public final static native void GiCoreView_createMagnifierView(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, long jarg3, GiView jarg3_);
  public final static native void GiCoreView_destoryView(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_);
  public final static native int GiCoreView_drawAll(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, long jarg3, GiCanvas jarg3_);
  public final static native boolean GiCoreView_drawAppend(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, long jarg3, GiCanvas jarg3_);
  public final static native void GiCoreView_dynDraw(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, long jarg3, GiCanvas jarg3_);
  public final static native int GiCoreView_setBkColor(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3);
  public final static native void GiCoreView_setScreenDpi(int jarg1);
  public final static native void GiCoreView_onSize(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3, int jarg4);
  public final static native boolean GiCoreView_onGesture__SWIG_0(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3, int jarg4, float jarg5, float jarg6, boolean jarg7);
  public final static native boolean GiCoreView_onGesture__SWIG_1(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3, int jarg4, float jarg5, float jarg6);
  public final static native boolean GiCoreView_twoFingersMove__SWIG_0(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7, boolean jarg8);
  public final static native boolean GiCoreView_twoFingersMove__SWIG_1(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, int jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native String GiCoreView_command(long jarg1, GiCoreView jarg1_);
  public final static native boolean GiCoreView_setCommand(long jarg1, GiCoreView jarg1_, long jarg2, GiView jarg2_, String jarg3);
  public final static native void GiCoreView_clearCachedData(long jarg1, GiCoreView jarg1_);
  public final static native int GiCoreView_addShapesForTest(long jarg1, GiCoreView jarg1_);
  public final static native int GiCoreView_getShapeCount(long jarg1, GiCoreView jarg1_);
  public final static native boolean GiCoreView_loadShapes(long jarg1, GiCoreView jarg1_, long jarg2, MgStorage jarg2_);
  public final static native boolean GiCoreView_saveShapes(long jarg1, GiCoreView jarg1_, long jarg2, MgStorage jarg2_);
  public final static native boolean GiCoreView_loadFromFile(long jarg1, GiCoreView jarg1_, String jarg2);
  public final static native boolean GiCoreView_saveToFile__SWIG_0(long jarg1, GiCoreView jarg1_, String jarg2, boolean jarg3);
  public final static native boolean GiCoreView_saveToFile__SWIG_1(long jarg1, GiCoreView jarg1_, String jarg2);
  public final static native boolean GiCoreView_zoomToExtent(long jarg1, GiCoreView jarg1_);
  public final static native void TestCanvas_initRand();
  public final static native int TestCanvas_randInt(int jarg1, int jarg2);
  public final static native float TestCanvas_randFloat(float jarg1, float jarg2);
  public final static native void TestCanvas_test__SWIG_0(long jarg1, GiCanvas jarg1_, int jarg2, int jarg3, boolean jarg4);
  public final static native void TestCanvas_test__SWIG_1(long jarg1, GiCanvas jarg1_, int jarg2, int jarg3);
  public final static native void TestCanvas_test__SWIG_2(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testRect(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testLine(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testEllipse(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testQuadBezier(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testCubicBezier(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testPolygon(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testClipPath(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testHandle(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native void TestCanvas_testDynCurves(long jarg1, GiCanvas jarg1_);
  public final static native void TestCanvas_testTextAt(long jarg1, GiCanvas jarg1_, int jarg2);
  public final static native long new_TestCanvas();
  public final static native void delete_TestCanvas(long jarg1);
  public final static native boolean MgStorage_readNode(long jarg1, MgStorage jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native boolean MgStorage_writeNode(long jarg1, MgStorage jarg1_, String jarg2, int jarg3, boolean jarg4);
  public final static native boolean MgStorage_readBool(long jarg1, MgStorage jarg1_, String jarg2, boolean jarg3);
  public final static native float MgStorage_readFloat(long jarg1, MgStorage jarg1_, String jarg2, float jarg3);
  public final static native void MgStorage_writeBool(long jarg1, MgStorage jarg1_, String jarg2, boolean jarg3);
  public final static native void MgStorage_writeFloat(long jarg1, MgStorage jarg1_, String jarg2, float jarg3);
  public final static native void MgStorage_writeString(long jarg1, MgStorage jarg1_, String jarg2, String jarg3);
  public final static native int MgStorage_readInt(long jarg1, MgStorage jarg1_, String jarg2, int jarg3);
  public final static native void MgStorage_writeInt(long jarg1, MgStorage jarg1_, String jarg2, int jarg3);
  public final static native void MgStorage_writeUInt(long jarg1, MgStorage jarg1_, String jarg2, int jarg3);
  public final static native boolean MgStorage_setError(long jarg1, MgStorage jarg1_, String jarg2);
  public final static native void delete_MgStorage(long jarg1);
  public final static native long new_MgJsonStorage();
  public final static native void delete_MgJsonStorage(long jarg1);
  public final static native long MgJsonStorage_storageForRead(long jarg1, MgJsonStorage jarg1_, String jarg2);
  public final static native long MgJsonStorage_storageForWrite(long jarg1, MgJsonStorage jarg1_);
  public final static native String MgJsonStorage_stringify__SWIG_0(long jarg1, MgJsonStorage jarg1_, boolean jarg2);
  public final static native String MgJsonStorage_stringify__SWIG_1(long jarg1, MgJsonStorage jarg1_);
  public final static native String MgJsonStorage_getParseError(long jarg1, MgJsonStorage jarg1_);

  public static void SwigDirector_GiCanvas_setPen(GiCanvas self, int argb, float width, int style, float phase) {
    self.setPen(argb, width, style, phase);
  }
  public static void SwigDirector_GiCanvas_setBrush(GiCanvas self, int argb, int style) {
    self.setBrush(argb, style);
  }
  public static void SwigDirector_GiCanvas_clearRect(GiCanvas self, float x, float y, float w, float h) {
    self.clearRect(x, y, w, h);
  }
  public static void SwigDirector_GiCanvas_drawRect(GiCanvas self, float x, float y, float w, float h, boolean stroke, boolean fill) {
    self.drawRect(x, y, w, h, stroke, fill);
  }
  public static void SwigDirector_GiCanvas_drawLine(GiCanvas self, float x1, float y1, float x2, float y2) {
    self.drawLine(x1, y1, x2, y2);
  }
  public static void SwigDirector_GiCanvas_drawEllipse(GiCanvas self, float x, float y, float w, float h, boolean stroke, boolean fill) {
    self.drawEllipse(x, y, w, h, stroke, fill);
  }
  public static void SwigDirector_GiCanvas_beginPath(GiCanvas self) {
    self.beginPath();
  }
  public static void SwigDirector_GiCanvas_moveTo(GiCanvas self, float x, float y) {
    self.moveTo(x, y);
  }
  public static void SwigDirector_GiCanvas_lineTo(GiCanvas self, float x, float y) {
    self.lineTo(x, y);
  }
  public static void SwigDirector_GiCanvas_bezierTo(GiCanvas self, float c1x, float c1y, float c2x, float c2y, float x, float y) {
    self.bezierTo(c1x, c1y, c2x, c2y, x, y);
  }
  public static void SwigDirector_GiCanvas_quadTo(GiCanvas self, float cpx, float cpy, float x, float y) {
    self.quadTo(cpx, cpy, x, y);
  }
  public static void SwigDirector_GiCanvas_closePath(GiCanvas self) {
    self.closePath();
  }
  public static void SwigDirector_GiCanvas_drawPath(GiCanvas self, boolean stroke, boolean fill) {
    self.drawPath(stroke, fill);
  }
  public static void SwigDirector_GiCanvas_saveClip(GiCanvas self) {
    self.saveClip();
  }
  public static void SwigDirector_GiCanvas_restoreClip(GiCanvas self) {
    self.restoreClip();
  }
  public static boolean SwigDirector_GiCanvas_clipRect(GiCanvas self, float x, float y, float w, float h) {
    return self.clipRect(x, y, w, h);
  }
  public static boolean SwigDirector_GiCanvas_clipPath(GiCanvas self) {
    return self.clipPath();
  }
  public static void SwigDirector_GiCanvas_drawHandle(GiCanvas self, float x, float y, int type) {
    self.drawHandle(x, y, type);
  }
  public static void SwigDirector_GiCanvas_drawBitmap(GiCanvas self, String name, float xc, float yc, float w, float h, float angle) {
    self.drawBitmap(name, xc, yc, w, h, angle);
  }
  public static float SwigDirector_GiCanvas_drawTextAt(GiCanvas self, String text, float x, float y, float h, int align) {
    return self.drawTextAt(text, x, y, h, align);
  }
  public static void SwigDirector_GiView_regenAll(GiView self) {
    self.regenAll();
  }
  public static void SwigDirector_GiView_regenAppend(GiView self) {
    self.regenAppend();
  }
  public static void SwigDirector_GiView_redraw(GiView self) {
    self.redraw();
  }
  public static boolean SwigDirector_GiView_useFinger(GiView self) {
    return self.useFinger();
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
