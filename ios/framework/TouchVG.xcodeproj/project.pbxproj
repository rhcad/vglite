// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		AEDBA7E1177959FC00A1E05F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = AEDBA7E0177959FC00A1E05F /* Foundation.framework */; };
		AEDBA7E7177959FC00A1E05F /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = AEDBA7E5177959FC00A1E05F /* InfoPlist.strings */; };
		AEDBA82917795E9A00A1E05F /* GiGraphView.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA82717795E9A00A1E05F /* GiGraphView.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA82A17795E9A00A1E05F /* GiQuartzCanvas.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA82817795E9A00A1E05F /* GiQuartzCanvas.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA82D17795EA400A1E05F /* GiGraphView.mm in Sources */ = {isa = PBXBuildFile; fileRef = AEDBA82B17795EA400A1E05F /* GiGraphView.mm */; };
		AEDBA82E17795EA400A1E05F /* GiQuartzCanvas.mm in Sources */ = {isa = PBXBuildFile; fileRef = AEDBA82C17795EA400A1E05F /* GiQuartzCanvas.mm */; };
		AEDBA83517795F3800A1E05F /* gicanvas.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA83317795F3800A1E05F /* gicanvas.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA83617795F3800A1E05F /* giview.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA83417795F3800A1E05F /* giview.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA83817795F4300A1E05F /* testcanvas.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA83717795F4300A1E05F /* testcanvas.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA83A17795F4C00A1E05F /* gicoreview.h in Headers */ = {isa = PBXBuildFile; fileRef = AEDBA83917795F4C00A1E05F /* gicoreview.h */; settings = {ATTRIBUTES = (Public, ); }; };
		AEDBA83C17795F6700A1E05F /* testcanvas.cpp in Sources */ = {isa = PBXBuildFile; fileRef = AEDBA83B17795F6700A1E05F /* testcanvas.cpp */; };
		AEDBA83E17795F7100A1E05F /* gicoreview.cpp in Sources */ = {isa = PBXBuildFile; fileRef = AEDBA83D17795F7100A1E05F /* gicoreview.cpp */; };
		AEDBA8471779603500A1E05F /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = AEDBA8461779603500A1E05F /* CoreGraphics.framework */; };
		AEDBA8491779606500A1E05F /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = AEDBA8481779606500A1E05F /* UIKit.framework */; };
		AEDBA84B1779606D00A1E05F /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = AEDBA84A1779606D00A1E05F /* QuartzCore.framework */; };
		C98B72FB177DB5BB00075D78 /* gigesture.h in Headers */ = {isa = PBXBuildFile; fileRef = C98B72FA177DB5BB00075D78 /* gigesture.h */; };
		C993E79B177D57C700CA398D /* GcBaseView.h in Headers */ = {isa = PBXBuildFile; fileRef = C993E79A177D57C700CA398D /* GcBaseView.h */; };
		C9FD791D177D4C51002FACBF /* GcMagnifierView.h in Headers */ = {isa = PBXBuildFile; fileRef = C9FD791B177D4C51002FACBF /* GcMagnifierView.h */; };
		C9FD791E177D4C51002FACBF /* GcMainView.h in Headers */ = {isa = PBXBuildFile; fileRef = C9FD791C177D4C51002FACBF /* GcMainView.h */; };
		C9FD7921177D4C5E002FACBF /* GcMagnifierView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C9FD791F177D4C5E002FACBF /* GcMagnifierView.cpp */; };
		C9FD7922177D4C5E002FACBF /* GcMainView.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C9FD7920177D4C5E002FACBF /* GcMainView.cpp */; };
		C9FD7945177D4F55002FACBF /* GcShapeDoc.h in Headers */ = {isa = PBXBuildFile; fileRef = C9FD7944177D4F55002FACBF /* GcShapeDoc.h */; };
		C9FD7947177D4F8E002FACBF /* GcShapeDoc.cpp in Sources */ = {isa = PBXBuildFile; fileRef = C9FD7946177D4F8E002FACBF /* GcShapeDoc.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		AEDBA930177979A800A1E05F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = AEDBA929177979A700A1E05F /* VGResources.xcodeproj */;
			proxyType = 2;
			remoteGlobalIDString = AEDBA8C417796FDB00A1E05F;
			remoteInfo = VGResources;
		};
		AEDBA9351779827200A1E05F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = AEDBA929177979A700A1E05F /* VGResources.xcodeproj */;
			proxyType = 1;
			remoteGlobalIDString = AEDBA8C317796FDB00A1E05F;
			remoteInfo = VGResources;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		AEDBA7DD177959FC00A1E05F /* TouchVG.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = TouchVG.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		AEDBA7E0177959FC00A1E05F /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		AEDBA7E4177959FC00A1E05F /* TouchVG-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "TouchVG-Info.plist"; sourceTree = "<group>"; };
		AEDBA7E6177959FC00A1E05F /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		AEDBA7E8177959FC00A1E05F /* TouchVG-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "TouchVG-Prefix.pch"; sourceTree = "<group>"; };
		AEDBA82717795E9A00A1E05F /* GiGraphView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GiGraphView.h; path = ../../view/include/GiGraphView.h; sourceTree = "<group>"; };
		AEDBA82817795E9A00A1E05F /* GiQuartzCanvas.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GiQuartzCanvas.h; path = ../../view/include/GiQuartzCanvas.h; sourceTree = "<group>"; };
		AEDBA82B17795EA400A1E05F /* GiGraphView.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = GiGraphView.mm; path = ../../view/src/GiGraphView.mm; sourceTree = "<group>"; };
		AEDBA82C17795EA400A1E05F /* GiQuartzCanvas.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = GiQuartzCanvas.mm; path = ../../view/src/GiQuartzCanvas.mm; sourceTree = "<group>"; };
		AEDBA83317795F3800A1E05F /* gicanvas.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = gicanvas.h; path = ../../../core/include/callback/gicanvas.h; sourceTree = "<group>"; };
		AEDBA83417795F3800A1E05F /* giview.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = giview.h; path = ../../../core/include/callback/giview.h; sourceTree = "<group>"; };
		AEDBA83717795F4300A1E05F /* testcanvas.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = testcanvas.h; path = ../../../core/include/test/testcanvas.h; sourceTree = "<group>"; };
		AEDBA83917795F4C00A1E05F /* gicoreview.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = gicoreview.h; path = ../../../core/include/view/gicoreview.h; sourceTree = "<group>"; };
		AEDBA83B17795F6700A1E05F /* testcanvas.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = testcanvas.cpp; path = ../../../core/src/test/testcanvas.cpp; sourceTree = "<group>"; };
		AEDBA83D17795F7100A1E05F /* gicoreview.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = gicoreview.cpp; path = ../../../core/src/view/gicoreview.cpp; sourceTree = "<group>"; };
		AEDBA8461779603500A1E05F /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = System/Library/Frameworks/CoreGraphics.framework; sourceTree = SDKROOT; };
		AEDBA8481779606500A1E05F /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
		AEDBA84A1779606D00A1E05F /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = System/Library/Frameworks/QuartzCore.framework; sourceTree = SDKROOT; };
		AEDBA929177979A700A1E05F /* VGResources.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; path = VGResources.xcodeproj; sourceTree = "<group>"; };
		C98B72FA177DB5BB00075D78 /* gigesture.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = gigesture.h; path = ../../../core/include/view/gigesture.h; sourceTree = "<group>"; };
		C993E79A177D57C700CA398D /* GcBaseView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GcBaseView.h; path = ../../../core/include/view/GcBaseView.h; sourceTree = "<group>"; };
		C9FD791B177D4C51002FACBF /* GcMagnifierView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GcMagnifierView.h; path = ../../../core/include/view/GcMagnifierView.h; sourceTree = "<group>"; };
		C9FD791C177D4C51002FACBF /* GcMainView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GcMainView.h; path = ../../../core/include/view/GcMainView.h; sourceTree = "<group>"; };
		C9FD791F177D4C5E002FACBF /* GcMagnifierView.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = GcMagnifierView.cpp; path = ../../../core/src/view/GcMagnifierView.cpp; sourceTree = "<group>"; };
		C9FD7920177D4C5E002FACBF /* GcMainView.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = GcMainView.cpp; path = ../../../core/src/view/GcMainView.cpp; sourceTree = "<group>"; };
		C9FD7944177D4F55002FACBF /* GcShapeDoc.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = GcShapeDoc.h; path = ../../../core/include/view/GcShapeDoc.h; sourceTree = "<group>"; };
		C9FD7946177D4F8E002FACBF /* GcShapeDoc.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = GcShapeDoc.cpp; path = ../../../core/src/view/GcShapeDoc.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		AEDBA7D7177959FC00A1E05F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AEDBA84B1779606D00A1E05F /* QuartzCore.framework in Frameworks */,
				AEDBA8491779606500A1E05F /* UIKit.framework in Frameworks */,
				AEDBA8471779603500A1E05F /* CoreGraphics.framework in Frameworks */,
				AEDBA7E1177959FC00A1E05F /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		AEDBA7CE177959FC00A1E05F = {
			isa = PBXGroup;
			children = (
				AEDBA929177979A700A1E05F /* VGResources.xcodeproj */,
				AEDBA7E2177959FC00A1E05F /* TouchVG */,
				AEDBA7DF177959FC00A1E05F /* Frameworks */,
				AEDBA7DE177959FC00A1E05F /* Products */,
			);
			sourceTree = "<group>";
		};
		AEDBA7DE177959FC00A1E05F /* Products */ = {
			isa = PBXGroup;
			children = (
				AEDBA7DD177959FC00A1E05F /* TouchVG.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		AEDBA7DF177959FC00A1E05F /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				AEDBA84A1779606D00A1E05F /* QuartzCore.framework */,
				AEDBA8481779606500A1E05F /* UIKit.framework */,
				AEDBA8461779603500A1E05F /* CoreGraphics.framework */,
				AEDBA7E0177959FC00A1E05F /* Foundation.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		AEDBA7E2177959FC00A1E05F /* TouchVG */ = {
			isa = PBXGroup;
			children = (
				AEDBA82F17795EC400A1E05F /* core */,
				AEDBA82517795E7D00A1E05F /* view */,
				AEDBA7E3177959FC00A1E05F /* Supporting Files */,
			);
			path = TouchVG;
			sourceTree = "<group>";
		};
		AEDBA7E3177959FC00A1E05F /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				AEDBA7E4177959FC00A1E05F /* TouchVG-Info.plist */,
				AEDBA7E5177959FC00A1E05F /* InfoPlist.strings */,
				AEDBA7E8177959FC00A1E05F /* TouchVG-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		AEDBA82517795E7D00A1E05F /* view */ = {
			isa = PBXGroup;
			children = (
				AEDBA82717795E9A00A1E05F /* GiGraphView.h */,
				AEDBA82B17795EA400A1E05F /* GiGraphView.mm */,
				AEDBA82817795E9A00A1E05F /* GiQuartzCanvas.h */,
				AEDBA82C17795EA400A1E05F /* GiQuartzCanvas.mm */,
			);
			name = view;
			sourceTree = "<group>";
		};
		AEDBA82F17795EC400A1E05F /* core */ = {
			isa = PBXGroup;
			children = (
				AEDBA83217795F0400A1E05F /* view */,
				AEDBA83117795EFB00A1E05F /* test */,
				AEDBA83017795EE000A1E05F /* callback */,
			);
			name = core;
			sourceTree = "<group>";
		};
		AEDBA83017795EE000A1E05F /* callback */ = {
			isa = PBXGroup;
			children = (
				AEDBA83317795F3800A1E05F /* gicanvas.h */,
				AEDBA83417795F3800A1E05F /* giview.h */,
			);
			name = callback;
			sourceTree = "<group>";
		};
		AEDBA83117795EFB00A1E05F /* test */ = {
			isa = PBXGroup;
			children = (
				AEDBA83717795F4300A1E05F /* testcanvas.h */,
				AEDBA83B17795F6700A1E05F /* testcanvas.cpp */,
			);
			name = test;
			sourceTree = "<group>";
		};
		AEDBA83217795F0400A1E05F /* view */ = {
			isa = PBXGroup;
			children = (
				C9FD7944177D4F55002FACBF /* GcShapeDoc.h */,
				C9FD7946177D4F8E002FACBF /* GcShapeDoc.cpp */,
				C9FD791B177D4C51002FACBF /* GcMagnifierView.h */,
				C9FD791F177D4C5E002FACBF /* GcMagnifierView.cpp */,
				C9FD791C177D4C51002FACBF /* GcMainView.h */,
				C9FD7920177D4C5E002FACBF /* GcMainView.cpp */,
				C993E79A177D57C700CA398D /* GcBaseView.h */,
				C98B72FA177DB5BB00075D78 /* gigesture.h */,
				AEDBA83917795F4C00A1E05F /* gicoreview.h */,
				AEDBA83D17795F7100A1E05F /* gicoreview.cpp */,
			);
			name = view;
			sourceTree = "<group>";
		};
		AEDBA92A177979A700A1E05F /* Products */ = {
			isa = PBXGroup;
			children = (
				AEDBA931177979A800A1E05F /* TouchVG.bundle */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		AEDBA7D8177959FC00A1E05F /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AEDBA82917795E9A00A1E05F /* GiGraphView.h in Headers */,
				AEDBA82A17795E9A00A1E05F /* GiQuartzCanvas.h in Headers */,
				AEDBA83517795F3800A1E05F /* gicanvas.h in Headers */,
				AEDBA83617795F3800A1E05F /* giview.h in Headers */,
				AEDBA83817795F4300A1E05F /* testcanvas.h in Headers */,
				AEDBA83A17795F4C00A1E05F /* gicoreview.h in Headers */,
				C9FD791D177D4C51002FACBF /* GcMagnifierView.h in Headers */,
				C9FD791E177D4C51002FACBF /* GcMainView.h in Headers */,
				C9FD7945177D4F55002FACBF /* GcShapeDoc.h in Headers */,
				C993E79B177D57C700CA398D /* GcBaseView.h in Headers */,
				C98B72FB177DB5BB00075D78 /* gigesture.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		AEDBA7DC177959FC00A1E05F /* TouchVG */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = AEDBA7EB177959FC00A1E05F /* Build configuration list for PBXNativeTarget "TouchVG" */;
			buildPhases = (
				AEDBA7D5177959FC00A1E05F /* ShellScript */,
				AEDBA7D6177959FC00A1E05F /* Sources */,
				AEDBA7D7177959FC00A1E05F /* Frameworks */,
				AEDBA7D8177959FC00A1E05F /* Headers */,
				AEDBA7D9177959FC00A1E05F /* Resources */,
				AEDBA7DA177959FC00A1E05F /* ShellScript */,
				AEDBA7DB177959FC00A1E05F /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				AEDBA9361779827200A1E05F /* PBXTargetDependency */,
			);
			name = TouchVG;
			productName = TouchVG;
			productReference = AEDBA7DD177959FC00A1E05F /* TouchVG.framework */;
			productType = "com.apple.product-type.framework.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		AEDBA7D0177959FC00A1E05F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
				ORGANIZATIONNAME = github.rhcad;
			};
			buildConfigurationList = AEDBA7D3177959FC00A1E05F /* Build configuration list for PBXProject "TouchVG" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = AEDBA7CE177959FC00A1E05F;
			productRefGroup = AEDBA7DE177959FC00A1E05F /* Products */;
			projectDirPath = "";
			projectReferences = (
				{
					ProductGroup = AEDBA92A177979A700A1E05F /* Products */;
					ProjectRef = AEDBA929177979A700A1E05F /* VGResources.xcodeproj */;
				},
			);
			projectRoot = "";
			targets = (
				AEDBA7DC177959FC00A1E05F /* TouchVG */,
			);
		};
/* End PBXProject section */

/* Begin PBXReferenceProxy section */
		AEDBA931177979A800A1E05F /* TouchVG.bundle */ = {
			isa = PBXReferenceProxy;
			fileType = wrapper.cfbundle;
			path = TouchVG.bundle;
			remoteRef = AEDBA930177979A800A1E05F /* PBXContainerItemProxy */;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
/* End PBXReferenceProxy section */

/* Begin PBXResourcesBuildPhase section */
		AEDBA7D9177959FC00A1E05F /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AEDBA7E7177959FC00A1E05F /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		AEDBA7D5177959FC00A1E05F /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		AEDBA7DA177959FC00A1E05F /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "HEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Versions/$FRAMEWORK_VERSION/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$(find $FRAMEWORK_HEADERS_DIR/. -not -type d 2> /dev/null | sed -e \"s@.*/@@g\")\n\nFIND_OPTS=\"\"\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n  if [ -n \"$FIND_OPTS\" ]; then\n    FIND_OPTS=\"$FIND_OPTS -o\"\n  fi\n  FIND_OPTS=\"$FIND_OPTS -name '$PUBLIC_HEADER'\"\ndone\n\nif [ -n \"$FIND_OPTS\" ]; then\n  for ORIG_HEADER in $(eval \"find $HEADERS_ROOT/. $FIND_OPTS\" 2> /dev/null | sed -e \"s@^$HEADERS_ROOT/./@@g\"); do\n    PUBLIC_HEADER=$(basename $ORIG_HEADER)\n    RELATIVE_PATH=$(dirname $ORIG_HEADER)\n    if [ -e $FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER ]; then\n      mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n      mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\n    fi\n  done\nfi\n";
		};
		AEDBA7DB177959FC00A1E05F /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \nif [[ \"$XCODE_VERSION_MAJOR\" = \"0500\" ]]\nthen\n    echo \"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$DT_TOOLCHAIN_DIR/usr/bin/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nelse\n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\nfi \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sfh \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		AEDBA7D6177959FC00A1E05F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AEDBA82D17795EA400A1E05F /* GiGraphView.mm in Sources */,
				AEDBA82E17795EA400A1E05F /* GiQuartzCanvas.mm in Sources */,
				AEDBA83C17795F6700A1E05F /* testcanvas.cpp in Sources */,
				AEDBA83E17795F7100A1E05F /* gicoreview.cpp in Sources */,
				C9FD7921177D4C5E002FACBF /* GcMagnifierView.cpp in Sources */,
				C9FD7922177D4C5E002FACBF /* GcMainView.cpp in Sources */,
				C9FD7947177D4F8E002FACBF /* GcShapeDoc.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		AEDBA9361779827200A1E05F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			name = VGResources;
			targetProxy = AEDBA9351779827200A1E05F /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		AEDBA7E5177959FC00A1E05F /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				AEDBA7E6177959FC00A1E05F /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		AEDBA7E9177959FC00A1E05F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		AEDBA7EA177959FC00A1E05F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		AEDBA7EC177959FC00A1E05F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TouchVG/TouchVG-Prefix.pch";
				INFOPLIST_FILE = "TouchVG/TouchVG-Info.plist";
				PRODUCT_NAME = TouchVG;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		AEDBA7ED177959FC00A1E05F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "TouchVG/TouchVG-Prefix.pch";
				INFOPLIST_FILE = "TouchVG/TouchVG-Info.plist";
				PRODUCT_NAME = TouchVG;
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		AEDBA7D3177959FC00A1E05F /* Build configuration list for PBXProject "TouchVG" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AEDBA7E9177959FC00A1E05F /* Debug */,
				AEDBA7EA177959FC00A1E05F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		AEDBA7EB177959FC00A1E05F /* Build configuration list for PBXNativeTarget "TouchVG" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AEDBA7EC177959FC00A1E05F /* Debug */,
				AEDBA7ED177959FC00A1E05F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = AEDBA7D0177959FC00A1E05F /* Project object */;
}
